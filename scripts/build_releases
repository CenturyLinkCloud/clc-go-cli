#!/bin/bash

version=$1

if [ -z $version ]
then
  echo "Usage: build_releases <version>"
  exit 1
fi

echo "Building the version $version"
echo

echo "Generating build variables"
buildDate=`date -u '+%Y-%m-%d_%I:%M:%S%p'`
buildCommit=`git rev-parse HEAD`
echo "Build version: $version"
echo "Build date: $buildDate"
echo "Build commit: $buildCommit"


release_folder=release
mkdir -p $release_folder
echo "Clening release dir"
echo
rm $release_folder/*

for GOOS in linux windows darwin
do
  for GOARCH in amd64
  do
    echo "=== $GOOS/$GOARCH ==="
    release_item_name=clc-$version-$GOOS-$GOARCH
    release_item_folder=$release_folder/$release_item_name
    mkdir -p $release_item_folder
    if [ $GOOS == windows ]
    then
      binary=$release_item_folder/clc.exe
    else
      binary=$release_item_folder/clc
    fi

    echo "Building $binary for $GOOS/$GOARCH.."

    GO_ENABLED=0 GOOS=$GOOS GOARCH=$GOARCH go build -o $binary -ldflags "-X github.com/centurylinkcloud/clc-go-cli/base.BuildVersion=$version -X github.com/centurylinkcloud/clc-go-cli/base.BuildDate=$buildDate -X github.com/centurylinkcloud/clc-go-cli/base.BuildGitCommit=$buildCommit" cmd/clc/*

    echo "Adding autocomplete files for $GOOS/$GOARCH.."

    mkdir -p $release_item_folder/autocomplete
    if [ $GOOS == linux ]
    then
      cp scripts/install_autocompletion_linux $release_item_folder/install_autocompletion
      cp autocomplete/bash_autocomplete $release_item_folder/autocomplete
    elif [ $GOOS == darwin ]
    then
      cp scripts/install_autocompletion_macos $release_item_folder/install_autocompletion
      cp autocomplete/bash_autocomplete $release_item_folder/autocomplete
    else
      cp autocomplete/powershell3_autocomplete.ps1 $release_item_folder/autocomplete
    fi

    echo "Archiving $release_item_name.."
    pushd $release_folder
    if [ $GOOS == windows ]
    then
      zip -r $release_item_name.zip $release_item_name
    else
      tar -czf $release_item_name.tar.gz $release_item_name
    fi

    if [ $GOOS == darwin ]
    then
      sh ../scripts/build_darwin_pkg $version
    fi
    popd

    echo "Removing release folder..."
    rm -rf $release_item_folder

    echo
    echo
  done
done